# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-crypt/gss-ntlmssp:lto - link time optimization
app-editors/nano:debug - Enable debug messages and assert warnings. Note that these will all be sent straight to stderr rather than some logging facility.
app-editors/nano:justify - Enable justify/unjustify functions for text formatting.
app-editors/nano:magic - Add magic file support (sys-apps/file) to automatically detect appropriate syntax highlighting
app-editors/nano:minimal - Disable all fancy features, including ones that otherwise have a dedicated USE flag (such as spelling).
app-editors/nano:split-usr - Enable this if /bin and /usr/bin are separate directories
app-misc/shelter:lto - link time optimization
app-office/gnumeric:libgda - Enable database support through gnome-extra/libgda.
app-office/gnumeric:perl - Enable perl plugin loader.
dev-db/sqlite:secure-delete - Enable overwriting of deleted content with zeros by default (http://sqlite.org/pragma.html#pragma_secure_delete), causing some performance penalty
dev-db/sqlite:tools - Install additional tools, among which are included: sqlite3-analyzer, sqlite3-changeset, sqlite3-db-dump, sqlite3-diff, sqlite3-rbu, sqlite3-expert and others.
dev-haskell/stack:integration-tests - Run the integration test suite.
dev-lang/idris2:chez - build using dev-scheme/chez
dev-lang/idris2:racket - build using dev-scheme/racket
dev-lang/idris2:test-full - pull in depedndencies to run all tests
dev-lang/moarvm:asan - Enable clang's Address Sanitizer functionality. Expect longer compile time.
dev-lang/moarvm:clang - Use clang compiler instead of GCC
dev-lang/moarvm:jit - Enable Just-In-Time-Compiler. Has no effect except on AMD64 and Darwin.
dev-lang/moarvm:optimize - Enable optimization via CFLAGS
dev-lang/moarvm:ubsan - Enable clang's Undefined Behavior Sanitizer functionality. Expect longer compile time.
dev-lang/mono:pax-kernel - Enable if the user plans to run the package under a pax enabled hardened kernel
dev-lang/mono:xen - Make mono generate code that is considerably faster on xen VMs but slightly slower on for normal systems.
dev-lang/nqp:clang - Toggle usage of the clang compiler in conjunction with MoarVM
dev-lang/nqp:moar - Build the MoarVM backend (experimental/broken)
dev-lang/rakudo:clang - Use Clang to compile the MoarVM backend
dev-lang/rakudo:moar - Use the MoarVM as backend
dev-lang/rust:clippy - Install clippy, Rust code linter
dev-lang/rust:dist - Install dist tarballs (used for bootstrapping)
dev-lang/rust:miri - Install miri, an interpreter for Rust's mid-level intermediate representation (requires USE=nightly)
dev-lang/rust:nightly - Enable nightly (UNSTABLE) features
dev-lang/rust:parallel-compiler - Build a multi-threaded rustc (experimental, not tested by upstream)
dev-lang/rust:rls - Install rls, Rust Language Server (used with IDEs supporting RLS protocol)
dev-lang/rust:rust-src - Install rust-src, needed by developer tools and for build-std (cross)
dev-lang/rust:rustfmt - Install rustfmt, Rust code formatter
dev-lang/rust:system-bootstrap - Bootstrap using installed rust compiler
dev-lang/rust:system-llvm - Use the system LLVM install
dev-lang/rust:wasm - Build support for the wasm32-unknown-unknown target
dev-libs/boost:context - Build and install the Boost.Context (and Boost.Fiber) library and all other Boost libraries that depend on it
dev-libs/boost:debug - Build and install only the debug version of the Boost libraries. Only enable this flag if you're developing against boost.
dev-libs/boost:doc - Install the full API documentation documentation. This takes over 200MB of extra disk space.
dev-libs/boost:nls - Build libboost_locale. This library requires compatible C library interfaces, which might not be provided by uClibc or other embedded libraries.
dev-libs/boost:numpy - Optionally build NumPy extensions when Boost.Python is enabled
dev-libs/boost:threads - Build multi-thread-compatible libraries instead of single-threaded only.
dev-libs/boost:tools - Build and install the boost tools (bcp, quickbook, inspect, wave)
dev-libs/cudnn:cuda10-2 - On Nvidia CUDA 10.2
dev-libs/cudnn:cuda11-5 - On Nvidia CUDA 11.5
dev-libs/gjs:sysprof - Enable profiling data capture support using dev-util/sysprof-capture
dev-libs/ocl-icd:khronos-headers - khronos headers
dev-qt/ghoul:android - Build plugin for Android devices
dev-qt/ghoul:autotest - Enable integration with popular unit testing frameworks (QtTest, GoogleTest, Boost.Test, Catch2)
dev-qt/ghoul:autotools - Build plugin for autotools-based projects
dev-qt/ghoul:baremetal - Build plugin for bare metal devices
dev-qt/ghoul:bazaar - Add support for GNU Bazaar version control system (requires manual installation of Bazaar client)
dev-qt/ghoul:beautifier - Build the beautifier plugin (supports astyle, clang-format, and uncrustify)
dev-qt/ghoul:boot2qt - Build plugin for Boot2Qt devices
dev-qt/ghoul:clang - Build clang-based plugins for C/C++ development (code model, formatting, static analysis)
dev-qt/ghoul:clearcase - Add support for IBM ClearCase version control system (requires manual installation of ClearCase client)
dev-qt/ghoul:cmake - Build plugin for CMake-based projects
dev-qt/ghoul:conan - Build plugin to integrate with the Conan package manager
dev-qt/ghoul:cppcheck - Enable integration with dev-util/cppcheck
dev-qt/ghoul:ctfvisualizer - Build the Chrome Trace Format visualizer plugin
dev-qt/ghoul:designer - Enable designer for QtWidgets-based UIs
dev-qt/ghoul:docker - Build plugin for Docker support
dev-qt/ghoul:drp - Discord Reach Presence
dev-qt/ghoul:glsl - Build the GLSL editor plugin
dev-qt/ghoul:help - Enable the integrated documentation viewer
dev-qt/ghoul:incredibuild - Enable integration with Incredibuild
dev-qt/ghoul:lsp - Add support for the Language Server Protocol (LSP)
dev-qt/ghoul:mcu - Build plugin for MCU devices
dev-qt/ghoul:mercurial - Add support for dev-vcs/mercurial version control system
dev-qt/ghoul:meson - Build plugin for Meson-based projects
dev-qt/ghoul:minimap - minimap plugin
dev-qt/ghoul:modeling - Build the graphical model editor plugin
dev-qt/ghoul:nim - Build plugin for Nim language support
dev-qt/ghoul:perforce - Add support for Perforce version control system (requires manual installation of Perforce client)
dev-qt/ghoul:perfprofiler - Build the Linux Perf-based profiler plugin
dev-qt/ghoul:python - Build plugin for Python language support
dev-qt/ghoul:qbs - Build plugin for Qbs-based projects
dev-qt/ghoul:qmake - Build plugin for qmake-based projects
dev-qt/ghoul:qml - Build plugins for QML-based development (designer, editor, project manager)
dev-qt/ghoul:qmldesigner - Enable designer for QML/QtQuick-based UIs
dev-qt/ghoul:qmljs - Build the QML/JavaScript editor plugin
dev-qt/ghoul:qmlprofiler - Build the QML profiler plugin
dev-qt/ghoul:qnx - Build plugin for QNX devices
dev-qt/ghoul:remotelinux - Build plugin for deployment and execution on a remote Linux host
dev-qt/ghoul:scxml - Build the graphical SCXML editor plugin
dev-qt/ghoul:serialterminal - Build the serial terminal plugin
dev-qt/ghoul:silversearcher - Enable integration with sys-apps/the_silver_searcher
dev-qt/ghoul:systemd - Add support for retrieving application output from journald
dev-qt/ghoul:valgrind - Enable integration with dev-util/valgrind
dev-qt/ghoul:webassembly - Build WebAssembly plugin
dev-qt/ghoul:webengine - Use dev-qt/qtwebengine to view documentation
dev-qt/qtwebkit:geolocation - Enable physical position determination via dev-qt/qtpositioning
dev-qt/qtwebkit:gstreamer - Enable HTML5 audio/video support via media-libs/gstreamer using SLOT 1.0
dev-qt/qtwebkit:hyphen - Enable hyphenation support via dev-libs/hyphen
dev-qt/qtwebkit:multimedia - Enable HTML5 audio/video support via dev-qt/qtmultimedia
dev-qt/qtwebkit:orientation - Enable device orientation detection via dev-qt/qtsensors
dev-qt/qtwebkit:printsupport - Enable printing via dev-qt/qtprintsupport
dev-qt/qtwebkit:qml - Build QML/QtQuick bindings
games-simulation/alchemy:fmod - use proprietary fmod for music streams support
games-simulation/alchemy:fork - use mawa fork with minor tweaks
games-simulation/alchemy:j1 - compile in one thread...
games-simulation/alchemy:lto - link time optimization (suggested)
games-simulation/alchemy:system - use system libs (not supported at all)
gui-libs/gtk:broadway - Enable the GDK Broadway backend.
gui-libs/gtk:cloudprint - Enable printing via Google Cloud Print.
gui-libs/gtk:colord - Use x11-misc/colord for color management in printing
gui-libs/gtk:sysprof - Enable profiling data capture support using dev-util/sysprof-capture
gui-libs/gtk:vulkan - Enable support for the Vulkan graphics API
net-analyzer/wireshark:androiddump - Install androiddump, an extcap interface to capture from Android devices
net-analyzer/wireshark:bcg729 - Use media-libs/bcg729 for G.729 codec support in RTP Player
net-analyzer/wireshark:brotli - Use app-arch/brotli for compression/decompression
net-analyzer/wireshark:capinfos - Install capinfos, to print information about capture files
net-analyzer/wireshark:captype - Install captype, to print the file types of capture files
net-analyzer/wireshark:ciscodump - Install ciscodump, extcap interface to capture from a remote Cisco router
net-analyzer/wireshark:dftest - Install dftest, to display filter byte-code, for debugging dfilter routines
net-analyzer/wireshark:dpauxmon - Install dpauxmon, an external capture interface (extcap) that captures DisplayPort AUX channel data from linux kernel drivers
net-analyzer/wireshark:dumpcap - Install dumpcap, to dump network traffic from inside wireshark
net-analyzer/wireshark:editcap - Install editcap, to edit and/or translate the format of capture files
net-analyzer/wireshark:http2 - Use net-libs/nghttp2 for HTTP/2 support
net-analyzer/wireshark:ilbc - Build with iLBC support in RTP Player using media-libs/libilbc
net-analyzer/wireshark:libxml2 - Use dev-libs/libxml2 for handling XML configuration in dissectors
net-analyzer/wireshark:lto - Enable link time optimization
net-analyzer/wireshark:maxminddb - Use dev-libs/libmaxminddb for IP address geolocation
net-analyzer/wireshark:mergecap - Install mergecap, to merge two or more capture files into one
net-analyzer/wireshark:minizip - Build with zip file compression support
net-analyzer/wireshark:netlink - Use dev-libs/libnl
net-analyzer/wireshark:pcap - Use net-libs/libpcap for network packet capturing (build dumpcap, rawshark)
net-analyzer/wireshark:plugin-ifdemo - Install plugin interface demo
net-analyzer/wireshark:plugins - Install plugins
net-analyzer/wireshark:randpkt - Install randpkt, a utility for creating pcap trace files full of random packets
net-analyzer/wireshark:randpktdump - Install randpktdump, an extcap interface to provide access to the random packet generator (randpkt)
net-analyzer/wireshark:reordercap - Install reordercap, to reorder input file by timestamp into output file
net-analyzer/wireshark:sbc - Use media-libs/sbc for playing back SBC encoded packets
net-analyzer/wireshark:sdjournal - Install sdjournal, an extcap that captures systemd journal entries
net-analyzer/wireshark:sharkd - Install sharkd, the daemon variant of wireshark
net-analyzer/wireshark:smi - Use net-libs/libsmi to resolve numeric OIDs into human readable format
net-analyzer/wireshark:spandsp - Use media-libs/spandsp for for G.722 and G.726 codec support in the RTP Player
net-analyzer/wireshark:sshdump - Install sshdump, an extcap interface to capture from a remote host through SSH
net-analyzer/wireshark:text2pcap - Install text2pcap, to generate a capture file from an ASCII hexdump of packets
net-analyzer/wireshark:tfshark - Install tfshark, a terminal-based version of the FileShark capability
net-analyzer/wireshark:tshark - Install tshark, to dump and analyzer network traffic from the command line
net-analyzer/wireshark:udpdump - Install udpdump, to get packets exported from a source (like a network device or a GSMTAP producer) that are dumped to a pcap file
net-im/element-desktop-bin:emoji - those smiles, you know...
net-misc/networkmanager:concheck - Enable connectivity checking support
net-misc/networkmanager:connection-sharing - Support connection sharing (uses net-dns/dnsmasq)
net-misc/networkmanager:dhclient - Use dhclient from net-misc/dhcp for getting an IP via DHCP
net-misc/networkmanager:dhcpcd - Use net-misc/dhcpcd for getting an IP
net-misc/networkmanager:elogind - Use sys-auth/elogind for session tracking
net-misc/networkmanager:iptables - Use net-firewall/iptables for connection sharing
net-misc/networkmanager:iwd - Use net-wireless/iwd instead of net-wireless/wpa_supplicant for wifi support by default
net-misc/networkmanager:lto - Build using Link Time Optimizations (LTO)
net-misc/networkmanager:modemmanager - Enable support for mobile broadband devices using net-misc/modemmanager
net-misc/networkmanager:nftables - Use net-firewall/nftables for connection sharing
net-misc/networkmanager:nss - Use dev-libs/nss for cryptography
net-misc/networkmanager:ofono - Use net-misc/ofono for telephony support.
net-misc/networkmanager:ovs - Enable OpenVSwitch support
net-misc/networkmanager:ppp - Enable support for mobile broadband and PPPoE connections using net-dialup/ppp
net-misc/networkmanager:psl - Use public suffix list via net-libs/libpsl
net-misc/networkmanager:resolvconf - Use net-dns/openresolv for managing DNS information in /etc/resolv.conf. Generally, a symlink to /run/NetworkManager/resolv.conf is simpler. On systems running systemd-resolved, disable this flag and create a symlink to /run/systemd/resolve/stub-resolv.conf.
net-misc/networkmanager:teamd - Enable Teamd control support
net-misc/networkmanager:tools - Build cli tools such as nmcli, nmtui and nm_cloud_setup
net-misc/networkmanager:wext - Enable support for the deprecated Wext (Wireless Extensions) API; needed for some older drivers (e.g. ipw2200, ndiswrapper)
net-misc/networkmanager:wifi - Enable support for wifi and 802.1x security
sci-libs/onnx:python - Build Python binary tools
sci-libs/onnx:test - Enable tests
sci-libs/pytorch:asan - Build with address sanitizer (ASAN)
sci-libs/pytorch:cuda - Enable support for nVidia CUDA
sci-libs/pytorch:fbgemm - Enable FBGEMM (Facebook GEneral Matrix Multiplication) support
sci-libs/pytorch:gflags - Build with gflags
sci-libs/pytorch:glog - Build with glog support
sci-libs/pytorch:gloo - Build gloo distributed communication backend support
sci-libs/pytorch:leveldb - Enable support for LevelDB
sci-libs/pytorch:lmdb - Enable support for LMDB
sci-libs/pytorch:mkldnn - Build with Intel MKL-DNN support
sci-libs/pytorch:namedtensor - Enable support for named tensors
sci-libs/pytorch:nnpack - Enable NNPACK support
sci-libs/pytorch:numa - Enable support for NUMA
sci-libs/pytorch:observers - Build observers
sci-libs/pytorch:opencl - Enable support for OpenCL
sci-libs/pytorch:opencv - Enable support for OpenCV
sci-libs/pytorch:qnnpack - Enable QNNPACK support
sci-libs/pytorch:redis - Enable support for Redis
sci-libs/pytorch:rocm - Enable AMD ROCm
sci-libs/pytorch:tools - Build binary tools
sci-libs/pytorch:zeromq - Enable support for ZeroMQ
virtual/rust:rustfmt - Install rustfmt, Rust code formatter
