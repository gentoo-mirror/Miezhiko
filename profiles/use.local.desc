# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-crypt/gss-ntlmssp:lto - link time optimization
app-misc/shelter:lto - link time optimization
app-office/gnumeric:libgda - Enable database support through gnome-extra/libgda.
app-office/gnumeric:perl - Enable perl plugin loader.
dev-cpp/asio:lto - link time optimization
dev-cpp/kashmir:lto - link time optimization
dev-db/clickhouse-bin:client - Install CLI client
dev-db/clickhouse-bin:server - Install server
dev-haskell/cabal-install:debug-conflict-sets - Add additional information to ConflictSets
dev-haskell/cabal-install:lukko - Use @lukko@ for file-locking
dev-haskell/cabal-install:native-dns - Enable use of the [resolv](https://hackage.haskell.org/package/resolv) & [windns](https://hackage.haskell.org/package/windns) packages for performing DNS lookups
dev-haskell/cabal-install-solver:debug-conflict-sets - Add additional information to ConflictSets
dev-haskell/cabal-install-solver:lukko - Use @lukko@ for file-locking
dev-haskell/cabal-install-solver:native-dns - Enable use of the [resolv](https://hackage.haskell.org/package/resolv) & [windns](https://hackage.haskell.org/package/windns) packages for performing DNS lookups
dev-haskell/hackage-security:lukko - Use @lukko@ for file-locking, otherwise use @GHC.IO.Handle.Lock@
dev-haskell/stylish-haskell:ghc-lib - Force dependency on ghc-lib-parser even if GHC API in the ghc package is supported
dev-lang/idris2:chez - build using dev-scheme/chez
dev-lang/idris2:racket - build using dev-scheme/racket
dev-lang/idris2:test-full - pull in depedndencies to run all tests
dev-lang/lua:deprecated - make deprecated data structures/routines available
dev-lang/lua:test-complete - Run the complete (non-portable) testsuite
dev-lang/mono:pax-kernel - Enable if the user plans to run the package under a pax enabled hardened kernel
dev-lang/mono:xen - Make mono generate code that is considerably faster on xen VMs but slightly slower on for normal systems.
dev-lang/rust:clippy - Install clippy, Rust code linter
dev-lang/rust:dist - Install dist tarballs (used for bootstrapping)
dev-lang/rust:miri - Install miri, an interpreter for Rust's mid-level intermediate representation (requires USE=nightly, sometimes is broken)
dev-lang/rust:nightly - Enable nightly (UNSTABLE) features (NOTE: it does not install nightly version, just enables features marked as nightly at time of release)
dev-lang/rust:parallel-compiler - Build a multi-threaded rustc (experimental, not tested by upstream)
dev-lang/rust:profiler - Build the profiler runtime and rust-demangler tool (needed for '-C profile-generate' or '-C instrument-coverage' codegen opts)
dev-lang/rust:rls - Install rls, Rust Language Server (used with IDEs supporting RLS protocol)
dev-lang/rust:rust-src - Install rust-src, needed by developer tools and for build-std (cross)
dev-lang/rust:rustfmt - Install rustfmt, Rust code formatter
dev-lang/rust:system-bootstrap - Bootstrap using installed rust compiler
dev-lang/rust:system-llvm - Use the system LLVM installation
dev-lang/rust:wasm - Build support for the wasm32-unknown-unknown target
dev-lang/spidermonkey:clang - Use Clang compiler instead of GCC
dev-lang/spidermonkey:custom-optimization - Build with user-specified compiler optimizations (-Os, -O0, -O1, -O2, -O3) from CFLAGS (unsupported)
dev-lang/spidermonkey:debug - Enable assertions to allow for easier debugging of programs that link to spidermonkey -- note this will often crash software on regular end-user systems
dev-lang/spidermonkey:lto - Enable Link Time Optimization (LTO)
dev-lang/spidermonkey:system-icu - Use the system-wide dev-libs/icu instead of bundled -- note, only takes effect when icu flag is enabled
dev-libs/boost:context - Build and install the Boost.Context (and Boost.Fiber) library and all other Boost libraries that depend on it
dev-libs/boost:debug - Build and install only the debug version of the Boost libraries. Only enable this flag if you're developing against boost.
dev-libs/boost:doc - Install the full API documentation documentation. This takes over 200MB of extra disk space.
dev-libs/boost:nls - Build libboost_locale. This library requires compatible C library interfaces, which might not be provided by uClibc or other embedded libraries.
dev-libs/boost:numpy - Optionally build NumPy extensions when Boost.Python is enabled
dev-libs/boost:threads - Build multi-thread-compatible libraries instead of single-threaded only.
dev-libs/boost:tools - Build and install the boost tools (bcp, quickbook, inspect, wave)
dev-libs/ocl-icd:khronos-headers - Install Khronos OpenCL headers.
dev-qt/ghoul:clang - Build clang-based plugins for C/C++ development (code model, formatting, static analysis)
dev-qt/ghoul:cmake - Build plugin for CMake-based projects
dev-qt/ghoul:cppcheck - Enable integration with dev-util/cppcheck
dev-qt/ghoul:drp - Discord Reach Presence
dev-qt/ghoul:help - Enable the integrated documentation viewer
dev-qt/ghoul:mercurial - Add support for dev-vcs/mercurial version control system
dev-qt/ghoul:python - Build plugin for Python language support
dev-qt/ghoul:serialterminal - Build the serial terminal plugin
dev-qt/ghoul:silversearcher - Enable integration with sys-apps/the_silver_searcher
dev-qt/ghoul:systemd - Add support for retrieving application output from journald
dev-qt/ghoul:valgrind - Enable integration with dev-util/valgrind
dev-qt/qtwebkit:geolocation - Enable physical position determination via dev-qt/qtpositioning
dev-qt/qtwebkit:gstreamer - Enable HTML5 audio/video support via media-libs/gstreamer using SLOT 1.0
dev-qt/qtwebkit:hyphen - Enable hyphenation support via dev-libs/hyphen
dev-qt/qtwebkit:multimedia - Enable HTML5 audio/video support via dev-qt/qtmultimedia
dev-qt/qtwebkit:orientation - Enable device orientation detection via dev-qt/qtsensors
dev-qt/qtwebkit:printsupport - Enable printing via dev-qt/qtprintsupport
dev-qt/qtwebkit:qml - Build QML/QtQuick bindings
games-simulation/alchemy:fmod - use proprietary fmod for music streams support
games-simulation/alchemy:fork - use mawa fork with minor tweaks
games-simulation/alchemy:j1 - compile in one thread...
games-simulation/alchemy:lto - link time optimization (suggested)
games-simulation/alchemy:system - use system libs (not supported at all)
gui-libs/gtk:broadway - Enable the GDK Broadway backend.
gui-libs/gtk:colord - Use x11-misc/colord for color management in printing
gui-libs/gtk:sysprof - Enable profiling data capture support using dev-util/sysprof-capture
gui-libs/gtk:vulkan - Enable support for the Vulkan graphics API
media-gfx/drawing:lto - link time optimization
net-im/fractal:lto - link time optimization
net-libs/restbed:lto - link time optimization
sci-libs/pytorch:asan - Build with address sanitizer (ASAN)
sci-libs/pytorch:cuda - Enable support for nVidia CUDA
sci-libs/pytorch:fbgemm - Enable FBGEMM (Facebook GEneral Matrix Multiplication) support
sci-libs/pytorch:gflags - Build with gflags
sci-libs/pytorch:glog - Build with glog support
sci-libs/pytorch:gloo - Build gloo distributed communication backend support
sci-libs/pytorch:leveldb - Enable support for LevelDB
sci-libs/pytorch:lmdb - Enable support for LMDB
sci-libs/pytorch:mkldnn - Build with Intel MKL-DNN support
sci-libs/pytorch:namedtensor - Enable support for named tensors
sci-libs/pytorch:nnpack - Enable NNPACK support
sci-libs/pytorch:numa - Enable support for NUMA
sci-libs/pytorch:observers - Build observers
sci-libs/pytorch:opencl - Enable support for OpenCL
sci-libs/pytorch:opencv - Enable support for OpenCV
sci-libs/pytorch:qnnpack - Enable QNNPACK support
sci-libs/pytorch:redis - Enable support for Redis
sci-libs/pytorch:rocm - Enable AMD ROCm
sci-libs/pytorch:tools - Build binary tools
sci-libs/pytorch:zeromq - Enable support for ZeroMQ
sci-libs/vtk:all-modules - Build all modules
sci-libs/vtk:boost - Add support for boost
sci-libs/vtk:cuda - Add support for CUDA
sci-libs/vtk:gdal - Support for gdal formated data
sci-libs/vtk:imaging - Building Imaging modules
sci-libs/vtk:json - Support for json formatted data
sci-libs/vtk:kits - Build kits in addition to modules
sci-libs/vtk:offscreen - Offscreen rendering through OSMesa
sci-libs/vtk:pegtl - Use pegtl to build parsers
sci-libs/vtk:rendering - Building Redering modules
sci-libs/vtk:tbb - Use dev-cpp/tbb to handle smp support
sci-libs/vtk:views - Building Views modules
sci-libs/vtk:web - Install web component
virtual/rust:rustfmt - Install rustfmt, Rust code formatter
x11-libs/fltk:games - Builds and installs some extra games
x11-libs/wxGTK:egl - Enable EGL support.
x11-libs/wxGTK:gstreamer - Enable the wxMediaCtrl class for playing audio and video through gstreamer.
x11-libs/wxGTK:sdl - Use Simple Directmedia Layer (media-libs/libsdl) for audio.
x11-terms/console:nautilus - Build gnome-base/nautilus extension
